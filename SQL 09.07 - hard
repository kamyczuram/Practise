Find all the users who were active for 3 consecutive days or more.

WITH perv_day AS(
select 
user_id,
record_date, 
LAG(record_date) OVER (PARTITION BY user_id ORDER BY record_date) as perv_day
from sf_events),

second_day AS(
select 
user_id,
record_date, 
perv_day,
LAG(perv_day) OVER 
(PARTITION BY user_id ORDER BY record_date) as second_day
from perv_day
)

SELECT *, record_date - second_day AS diff 
FROM second_day
WHERE record_date - second_day = 2;



Find the best-selling item for each month (no need to separate months by year). 
The best-selling item is determined by the highest total sales amount, calculated as: total_paid = unitprice * quantity. 
Output the month, description of the item, and the total amount paid.


WITH calculated AS(
select EXTRACT(MONTH FROM invoicedate) AS month,
description,
unitprice * quantity AS total_paid
from online_retail),

grouped AS(
SELECT month, description, SUM(total_paid) as total_paid
FROM calculated
GROUP BY (month, description)
ORDER BY month
),

ranked AS (
SELECT month, description, total_paid,
RANK() OVER (PARTITION BY month ORDER BY total_paid DESC) as rnk
FROM grouped
)

SELECT month, description, total_paid
FROM ranked
WHERE rnk = 1;



